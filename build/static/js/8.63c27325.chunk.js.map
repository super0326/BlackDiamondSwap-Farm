{"version":3,"sources":["hooks/useTickets.ts","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTokenBalance.ts","hooks/useBuyLottery.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useApprove.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["useTotalRewards","useState","BigNumber","rewards","setRewards","lotteryContract","useLottery","fastRefresh","useRefresh","useEffect","a","getTotalRewards","res","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWallet","ticketsContract","useLotteryTicket","useCallback","getTotalClaim","claim","useWinningNumbers","winngNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","multiCall","abi","calls","web3","getWeb3","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finanltokenIds","r","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","amount","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","cakeContract","getContract","cakeABI","getCakeAddress","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","bal","useTokenBalance","ethereum","getTokenBalance","useMultiClaimLottery","lotteryTicketContract","onMultiClaim","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","max","setMax","fetchMax","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","useApprove","lpContract","dispatch","useDispatch","masterChefContract","useMasterchef","onApprove","approve","fetchFarmUserDataAsync","useLotteryApprove","useCake","StyledTokenInput","StyledSpacer","props","spacing","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","symbol","availableSymbol","onChange","onSelectMax","value","TranslateString","useI18n","Input","endAdornment","size","placeholder","toLocaleString","Tips","BuyTicketModal","onDismiss","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","handleBuy","Math","floor","random","handleSelectMax","Number","title","e","currentTarget","Announce","Final","ModalActions","fullWidth","variant","disabled","React","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","gradients","bubblegum","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","winNumbers","rewardMatch","number","n","listItems","emoji","join","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","useLotteryAllowance","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","StyledFooter","CardFooter","Link","Row","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","href","target","StyledLink","Content","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","Provider"],"mappings":"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","file":"static/js/8.63c27325.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWallet()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3()\r\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (ticketIssue.toString() === issueIdex) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIdex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIdex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\r\n    return amount / 1e18 / 10\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { provider } from 'web3-core'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport { getContract } from 'utils/web3'\r\nimport { getTokenBalance } from 'utils/erc20'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && ethereum) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, ethereum, tokenAddress, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const cakeContract = getContract(cakeABI, getCakeAddress())\r\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(bal))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWallet()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  onSelectMax?: () => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy('10', numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > 50) {\r\n      setVal('50')\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * 10\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 CAKE')}</Tips>\r\n        <Tips>{TranslateString(458, '1 Ticket = 10 CAKE')}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          fullWidth\r\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"secondary\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"white\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"white\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n  font-size: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(999, 'The PITLottery')}</Title>\r\n          <Blurb>{TranslateString(999, 'Buy tickets with PIT')}</Blurb>\r\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(999, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              ANO\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(999, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your PITwill not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button fullWidth onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport { useLotteryApprove } from 'hooks/useApprove'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const { onApprove } = useLotteryApprove()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(999, 'Approve ANO')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { useCake, useLottery } from './useContract'\r\nimport { getAllowance } from '../utils/erc20'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account }: { account: string } = useWallet()\r\n  const lotteryContract = useLottery()\r\n  const cakeContract = useCake()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await getAllowance(cakeContract, lotteryContract, account)\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account && cakeContract && cakeContract) {\r\n      fetchAllowance()\r\n    }\r\n    const refreshInterval = setInterval(fetchAllowance, 10000)\r\n    return () => clearInterval(refreshInterval)\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\r\n  const { account }: { account: string } = useWallet()\r\n  const [allowance, setAllowance] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        setAllowance(null)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(999, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"primary\">\r\n          {TranslateString(999, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"primary\">\r\n            {TranslateString(999, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"primary\">\r\n          {TranslateString(999, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem marginBottom=\"20px\">\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"primary\">\r\n                {TranslateString(999, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} ANO</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Card, CardBody, CardFooter } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport Divider from './Divider'\r\n\r\nconst StyledFooter = styled(CardFooter)`\r\n  background: url('/images/lottery/background.png');\r\n  background-repeat: no-repeat;\r\n  background-position: bottom right;\r\n  background-size: contain;\r\n`\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n        <StyledFooter>\r\n          <StyledCardContentInner>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <br />\r\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n          <br />\r\n        </StyledFooter>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nconst Link = styled.a`\r\n  -webkit-box-align: center;\r\n  border: 2px solid;\r\n  border-radius: 16px;\r\n  box-shadow: none;\r\n  -webkit-box-pack: center;\r\n  justify-content: center;\r\n  outline: 0px;\r\n  padding: 6px 16px;\r\n  transition: background-color 0.2s ease 0s;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  color: rgb(72, 175, 153);\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  border: 2px dotted rgb(72, 175, 153);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div`\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Link, Card, CardBody, CardFooter } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst StyledLink = styled(Link)`\r\n  -webkit-box-align: center;\r\n  border: 2px solid;\r\n  border-radius: 16px;\r\n  box-shadow: none;\r\n  -webkit-box-pack: center;\r\n  justify-content: center;\r\n  outline: 0px;\r\n  padding: 0px 16px;\r\n  transition: background-color 0.2s ease 0s;\r\n  text-decoration: none;\r\n  opacity: 1;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst Content = styled(Text)`\r\n  text-align: center;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {TranslateString(999, 'How it works')}\r\n              </Title>\r\n            </StyledCardHeader>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <StyledCardContentInner>\r\n            <Content fontSize=\"16px\">\r\n              {TranslateString(\r\n                999,\r\n                'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n              )}\r\n            </Content>\r\n            <br />\r\n            <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\r\n          </StyledCardContentInner>\r\n          <br />\r\n        </CardFooter>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n      <HowItWorks />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(999, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"primary\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(999, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} ANO`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(999, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}